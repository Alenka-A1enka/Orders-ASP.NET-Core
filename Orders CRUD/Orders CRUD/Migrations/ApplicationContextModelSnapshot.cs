// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Orders_CRUD;

#nullable disable

namespace Orders_CRUD.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Orders_CRUD.Controllers.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasPrecision(7)
                        .HasColumnType("timestamp(7) with time zone");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProviderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.HasIndex("Number", "ProviderId")
                        .IsUnique();

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 11, 12, 17, 0, 0, 0, DateTimeKind.Utc),
                            Number = "123qwe",
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 11, 12, 17, 0, 0, 0, DateTimeKind.Utc),
                            Number = "456qwe",
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 9, 12, 17, 0, 0, 0, DateTimeKind.Utc),
                            Number = "789qwe",
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 11, 7, 17, 0, 0, 0, DateTimeKind.Utc),
                            Number = "123abc",
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2023, 8, 12, 17, 0, 0, 0, DateTimeKind.Utc),
                            Number = "123def",
                            ProviderId = 3
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2023, 11, 2, 17, 0, 0, 0, DateTimeKind.Utc),
                            Number = "123ghi",
                            ProviderId = 3
                        });
                });

            modelBuilder.Entity("Orders_CRUD.Controllers.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 3)
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Товар 1",
                            OrderId = 1,
                            Quantity = 3m,
                            Unit = "шт"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Товар 3",
                            OrderId = 2,
                            Quantity = 300m,
                            Unit = "гр"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Товар 2",
                            OrderId = 3,
                            Quantity = 400m,
                            Unit = "л"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Товар 4",
                            OrderId = 4,
                            Quantity = 10m,
                            Unit = "шт"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Товар 4",
                            OrderId = 5,
                            Quantity = 5m,
                            Unit = "шт"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Товар 2",
                            OrderId = 6,
                            Quantity = 500m,
                            Unit = "л"
                        });
                });

            modelBuilder.Entity("Orders_CRUD.Controllers.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Поставщик 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Поставщик 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Поставщик 3"
                        });
                });

            modelBuilder.Entity("Orders_CRUD.Controllers.Order", b =>
                {
                    b.HasOne("Orders_CRUD.Controllers.Provider", "Provider")
                        .WithMany("Orders")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Orders_CRUD.Controllers.OrderItem", b =>
                {
                    b.HasOne("Orders_CRUD.Controllers.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Orders_CRUD.Controllers.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Orders_CRUD.Controllers.Provider", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
